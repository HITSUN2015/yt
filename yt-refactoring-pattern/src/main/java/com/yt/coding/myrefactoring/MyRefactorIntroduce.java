package com.yt.coding.myrefactoring;

/**
 * @author SUN
 * @create 2019-04-22 下午8:43
 * @desc
 *
 * 关于代码：
 * 我认为主要就两件事来改善质量
 * 一个是 第一次设计写代码时，写好
 * 另一个是 改善既有代码
 *
 * 这两件事，最重要的是 知道什么样的代码是好的
 *
 *  BOOK1:《重构 改善既有代码的设计》这本书 引入了 bad smells，来让人识别出代码的味道，
 *                然后通过 函数、对象、数据、条件表达式、函数调用、概括关系来介绍了安全重构的基本方法
 *                但是我感觉，没有清晰的指出bad smell 到 这些refactor method的映射关系
 *
 *  BOOK2:《重构与模式》这本书，以设计模式为目标，按照设计模式的分类维度，介绍重构的方法
 *
 *  BOOK3:《码出高效：阿里巴巴JAVA开发手册 1.4.0》这本书，介绍了代码的各个流程里，该注意的细节
 *
 *  BOOK4:《代码整洁之道》布局上应该属于 《码出高效：阿里巴巴JAVA开发手册 1.4.0》讲述各处代码的注意事项
 *
 *  我在看完BOOK1，各看部分BOOK2~4后
 *
 *  感觉要么像shotgun似的堆叠细节，要么就是抜的太高设计思想，我没理解到位
 *
 *  在这里我想梳理的是：写代码前，明确我想要的代码是什么样子，且他是当下需求的好的代码，尽量易扩展的
 *    需要解决的问题：面对各个部分的代码，我应该考虑哪些维度，我该如何选择设计模式或者逻辑代码
 *    // TODO: 19/4/22 这里其实就一个很大的分支 ：是一次把代码写的尽量好，还是先随便写代码，尽快重构
 *
 *    关于重构，我认为，至少我得知道，在某需求下，我想把代码改成什么样子，然后才能用重构方法重构代码
 *
 *    为了把 23种设计模式、重构的目标、开发规范 揉进写代码的过程中
 *
 *    我在这里遇到了问题，设计模式，我精通，不知道如果抽象，我先读编原版的设计模式。。。
 */
public interface MyRefactorIntroduce {
}
